# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/gnome14/soup/gcc34.patch
# ROCK Linux is Copyright (C) 1998 - 2004 Clifford Wolf
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

--- soup-0.7.11/src/libwsdl/wsdl-typecodes.c.orig	2004-07-20 03:05:20.881937824 +0200
+++ soup-0.7.11/src/libwsdl/wsdl-typecodes.c	2004-07-20 03:12:25.701355456 +0200
@@ -977,7 +977,7 @@
 {
 	switch (tc->kind) {
 	case WSDL_TK_GLIB_NULL:
-		g_warning ("Invalid typecode NULL in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode NULL in %s", G_GNUC_FUNCTION);
 		return (0);
 		break;
 
@@ -1082,7 +1082,7 @@
 		break;
 
 	case WSDL_TK_GLIB_MAX:
-		g_warning ("Invalid typecode MAX in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode MAX in %s", G_GNUC_FUNCTION);
 		return (0);
 		break;
 	}
@@ -1106,7 +1106,7 @@
 {
 	switch (tc->kind) {
 	case WSDL_TK_GLIB_NULL:
-		g_warning ("Invalid typecode NULL in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode NULL in %s", G_GNUC_FUNCTION);
 		return (0);
 		break;
 
@@ -1218,7 +1218,7 @@
 		break;
 
 	case WSDL_TK_GLIB_MAX:
-		g_warning ("Invalid typecode MAX in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode MAX in %s", G_GNUC_FUNCTION);
 		return (0);
 		break;
 	}
--- soup-0.7.11/src/libwsdl/wsdl-soap-parse.c.orig	2004-07-20 03:14:47.284831496 +0200
+++ soup-0.7.11/src/libwsdl/wsdl-soap-parse.c	2004-07-20 03:15:21.280663344 +0200
@@ -37,7 +37,7 @@
 
 	switch (wsdl_typecode_kind (typecode)) {
 	case WSDL_TK_GLIB_NULL:
-		g_warning ("Invalid typecode NULL in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode NULL in %s", G_GNUC_FUNCTION);
 		break;
 
 	case WSDL_TK_GLIB_VOID:
@@ -203,7 +203,7 @@
 		/* Handled elsewhere */
 		break;
 	case WSDL_TK_GLIB_MAX:
-		g_warning ("Invalid typecode MAX in " G_GNUC_FUNCTION);
+		g_warning ("Invalid typecode MAX in %s", G_GNUC_FUNCTION);
 		break;
 	}
 }
--- soup-0.7.11/src/libwsdl/wsdl-soap-memory.c.orig	2004-07-20 03:17:21.060454048 +0200
+++ soup-0.7.11/src/libwsdl/wsdl-soap-memory.c	2004-07-20 03:18:18.200767400 +0200
@@ -33,14 +33,12 @@
 
 	while (param->name != NULL) {
 		if (param->typecode == NULL) {
-			g_warning (G_GNUC_FUNCTION
-				   ": Parameter %s has no typecode!",
+			g_warning ("%s: Parameter %s has no typecode!", G_GNUC_FUNCTION,
 				   param->name);
 		} else {
 			if (param->param == NULL) {
-				g_warning (G_GNUC_FUNCTION
-					   ": Parameter %s has no "
-					   "memory location!",
+				g_warning ("%s: Parameter %s has no "
+					   "memory location!", G_GNUC_FUNCTION, 
 					   param->name);
 			} else {
 				memset (param->param, 
@@ -71,8 +69,7 @@
 
 	while (param->name != NULL) {
 		if (param->typecode == NULL) {
-			g_warning (G_GNUC_FUNCTION
-				   ": Parameter %s has no typecode!",
+			g_warning ("%s: Parameter %s has no typecode!", G_GNUC_FUNCTION,
 				   param->name);
 		} else {
 			if (param->param != NULL &&
