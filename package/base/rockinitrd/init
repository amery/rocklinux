#!/bin/bash

initrd_mount() { # {{{
	dev=${1}
	mntpoint=${2}

	if [ ! -e ${dev} ] ; then
		echo " ** ${dev} could not be found!"
		echo " ** dumping you into an emergency shell"
		exec /bin/bash
		return 1;
	fi

	/sbin/fsck -C -a ${dev}
	fsckrc=${?}
	if [ ${fsckrc} -eq 8 ] ; then
		return 1
	fi
	if   [ $(( ${fsckrc} & ~3 )) != 0 ] ; then
		echo " **"
		echo " ** Filesystem ${dev} || error=${?} failed (returncode=${fsckrc})."
		echo " ** Please repair the broken disk(s) manually."
		echo " **"
		exec /bin/bash
	elif [ $(( ${fsckrc} &  2 )) != 0 ] ; then
		echo " **"
		echo " ** fsck has requested the system to be rebooted."
		echo " ** Running a shell."
		echo " **"
		echo
		exec /bin/bash
	fi

	mount -n ${dev} ${mntpoint}
	return ${?}
} # }}}

PATH="/sbin:/usr/sbin:/bin/:/usr/bin"

rootfs=""
rootfsmounted=0

mount -n -t tmpfs tmpfs /tmp || echo "Can't mount tmpfs!"
mount -n -t proc proc /proc  || echo "Can't mount procfs!"
mount -n -t sysfs sysfs /sys || echo "Can't mount sysfs!"
mount -n -t ramfs ramfs /dev || echo "Can't mount ramfs!"

cp -r /lib/udev/devices/* /dev

echo "" > /proc/sys/kernel/hotplug
/sbin/udevd --daemon 

if [ -n "${real_root}" ] ; then
	rootfs=${real_root}
else
	while read dev mntpoint fstype options fsck1 fsck2 ; do
		[ "${mntpoint}" == "/" ] && rootfs=${dev}
		[ -n "${rootfs}" ] && break
	done < /etc/fstab
fi

echo "loading kernel modules"
. /etc/conf/kernel

# create nodes for devices already in kernel
while read uevent; do 
		echo 1 > $uevent
done < <( find /sys -name uevent )
udevwait=0
while [ -d /dev/.udev/queue -a $udevwait -lt 300 ] ; do
		sleep 1
		(( udevwait++ ))
done

for x in /etc/conf/* ; do
	[ "${x}" == "/etc/conf/kernel" ] && continue
	echo "Running ${x} ..."
	. ${x}
done

if [ ${rootfsmounted} -eq 0 ] ; then
	echo "Mounting rootfs (${rootfs}) on /root"
	initrd_mount ${rootfs} /root
	rootfsmounted=1
fi

[ -z "$real_init" ] && real_init="/sbin/init"

echo "starting $real_init in /root"
echo "parameters passed to $real_init: ${@}"
cd /root
mkdir -p /root/initrd
mount -n --move /tmp /root/tmp
mount -n --move /proc /root/proc
mount -n --move /sys /root/sys
mount -n --move /dev /root/dev
/sbin/pivot_root . initrd
exec chroot . $real_init "${@}" < /dev/console > /dev/console 2>&1
