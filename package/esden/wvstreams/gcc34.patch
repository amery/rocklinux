# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/esden/wvstreams/gcc34.patch
# ROCK Linux is Copyright (C) 1998 - 2004 Clifford Wolf
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

Submitted By: Uwe Düffert (lfs at uwe-dueffert dot de)
Date: 2004-05-16
Initial Package Version: 3.75.0
Origin: self-created, http://www.uwe-dueffert.de/lfs/ownpatches/wvstreams-3.75.0-gcc34-1.patch
Upstream Status: not reported
Description: fix compilation with gcc34
 
diff -Naur wvstreams-3.75.0.orig/include/uniconftree.h wvstreams-3.75.0/include/uniconftree.h
--- wvstreams-3.75.0.orig/include/uniconftree.h	2004-05-16 14:22:42.665940696 +0000
+++ wvstreams-3.75.0/include/uniconftree.h	2004-05-16 14:22:53.992218840 +0000
@@ -48,7 +48,7 @@
 
     /** Returns a pointer to the parent node, or NULL if there is none. */
     Sub *parent() const
-        { return static_cast<Sub*>(xparent); }
+        { return static_cast<Sub*>(Base::xparent); }
 
     /** Reparents this node. */
     void setparent(Sub *parent)
@@ -93,13 +93,13 @@
     /** Removes and deletes all children of this node. */
     void zap()
     {
-        if (!xchildren)
+        if (!Base::xchildren)
             return;
         // set xchildren to NULL first so that the zap() will happen faster
         // otherwise, each child will attempt to unlink itself uselessly
 
-        typename Base::Container *oldchildren = xchildren;
-        xchildren = NULL;
+        typename Base::Container *oldchildren = Base::xchildren;
+        Base::xchildren = NULL;
 
         // delete all children
         typename Base::Container::Iter i(*oldchildren);
diff -Naur wvstreams-3.75.0.orig/include/wvsorter.h wvstreams-3.75.0/include/wvsorter.h
--- wvstreams-3.75.0.orig/include/wvsorter.h	2004-05-16 14:22:42.587952552 +0000
+++ wvstreams-3.75.0/include/wvsorter.h	2004-05-16 14:22:53.993218688 +0000
@@ -90,7 +90,7 @@
     for (i.rewind(); i.next(); )
 	n++;
     
-    array = new (void *) [n+2];
+    array = new void*[n+2];
     void **aptr = array;
 
     *aptr++ = NULL; // initial link is NULL, to act like a normal iterator
diff -Naur wvstreams-3.75.0.orig/utils/wvbuffer.cc wvstreams-3.75.0/utils/wvbuffer.cc
--- wvstreams-3.75.0.orig/utils/wvbuffer.cc	2004-05-16 14:22:42.433975960 +0000
+++ wvstreams-3.75.0/utils/wvbuffer.cc	2004-05-16 14:22:53.993218688 +0000
@@ -9,6 +9,7 @@
 /***** Specialization for raw memory buffers *****/
 
 // Instantiate some commonly used templates
+/*
 template WvBufBaseCommonImpl<unsigned char>;
 template WvInPlaceBufBase<unsigned char>;
 template WvConstInPlaceBufBase<unsigned char>;
@@ -16,6 +17,7 @@
 template WvDynBufBase<unsigned char>;
 template WvNullBufBase<unsigned char>;
 template WvBufCursorBase<unsigned char>;
+*/
 
 void WvBufBase<unsigned char>::putstr(WvStringParm str)
 {
