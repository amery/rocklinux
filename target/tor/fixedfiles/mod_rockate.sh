#!/bin/bash
# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/target/tor/fixedfiles/mod_rockate.sh
# ROCK Linux is Copyright (C) 1998 - 2007 Clifford Wolf
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version. A copy of the GNU General Public
# License can be found at Documentation/COPYING.
# 
# Many people helped and are helping developing ROCK Linux. Please
# have a look at http://www.rocklinux.org/ and the Documentation/TEAM
# file for details.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---
#
# ROCKate network setup

rockate_configure() {
	local device="${1}"
	read inet ip rest < <( ip addr show ${device} | grep 'inet ' )
	gui_input "Enter IP address for ${device}" "${ip}" newip
	if [ -n "${newip}" -a "${newip}" != "${ip}" ] ; then
		ip addr del "${ip}" dev "${device}"
		ip addr add "${newip}" dev "${device}"
	fi
}

rockate_defaultroute(){
	local gw="${1}"
	gui_input "Enter IP Address for the default router" "${gw}" newgw
	if [ -n "${newgw}" -a "${gw}" != "${newgw}" ] ; then
		route del -net default ${gw}
		route add -net default ${newgw}
	fi
}

rockate_update(){
	read version < /etc/ROCKATE_VERSION
	tmp="/tmp/update.${$}"
	echo "Downloading Updatelist"
	wget -O ${tmp} http://xsanr2oqmett7ovm.onion/UPDATES_${version}
	if [ ! -s "${tmp}" ] ; then
		echo "No updates available for version ${version}."
		rm -f ${tmp}
		return
	fi
	while read url description ; do
		echo "Downloading update: ${description}"
		wget -O /tmp/update.tar.bz2 "${url}"
		cd /
		echo "Installing update: ${description}"
		tar xf /tmp/update.tar.bz2
		cd -
		rm -f /tmp/update.tar.bz2
	done < ${tmp}
	rm -f ${tmp}
}

rockate_transparent_tor(){
	# based on http://wiki.noreply.org/noreply/TheOnionRouter/TransparentProxy
# destinations you don't want routed through Tor
	NON_TOR=""
	while read inet addr brd bcast rest ; do
# inet 127.0.0.1/8 scope host lo
# inet 213.239.220.170/27 brd 213.239.220.191 scope global eth0
		[ "${addr:0:3}" == "127" ] && continue

		read addr1 addr2 addr3 addr4 subnet <<< "${addr//[.\/]/ }"
		read bcast1 bcast2 bcast3 bcast4 <<< "${bcast//./ }"
		unset netaddr
		for x in 1 2 3 4 ; do
			eval a="\${addr${x}}"
			eval b="\${bcast${x}}"
			if [ ${subnet} -ge 8 ] ; then
				# the simple case
				netaddr="${netaddr}${netaddr:+.}${a}"
				subnet=$(( ${subnet} - 8 ))
			elif [ ${subnet} -eq 0 ] ; then
				# the other simple case
				netaddr="${netaddr}${netaddr:+.}0"
			else
				# 0 < subnet < 8
				b="$(( ( ${b} + 1 ) - ( 2 ** ( 8 - ${subnet} ) ) ))"
				netaddr="${netaddr}${netaddr:+.}${b}"
				subnet=0
			fi
		done
		NON_TOR="${NON_TOR} ${netaddr}/${addr##*/}"
	done < <( ip a | grep inet | grep -v inet6 )

# the UID Tor runs as
	TOR_UID="79"

# Tor's TransPort
	TRANS_PORT="9040"

	lsmod | grep ipt_owner || modprobe ipt_owner

	iptables -F
	iptables -t nat -F

	iptables -t nat -A OUTPUT -m owner --uid-owner $TOR_UID -j RETURN
	for NET in $NON_TOR 127.0.0.0/9 127.128.0.0/10; do
		iptables -t nat -A OUTPUT -d $NET -j RETURN
	done
	iptables -t nat -A OUTPUT -p tcp --syn -j DNAT --to-dest 127.0.0.1:$TRANS_PORT

	iptables -A OUTPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	for NET in $NON_TOR 127.0.0.0/8; do
		iptables -A OUTPUT -d $NET -j ACCEPT
	done
	iptables -A OUTPUT -m owner --uid-owner $TOR_UID -j ACCEPT
	iptables -A OUTPUT -j REJECT
}

main() {
#eth0      Link encap:Ethernet  HWaddr 00:10:DC:7C:EE:8A  
	while
		menu=""
		while read name a b c mac ; do
			read inet ip rest < <( ip addr show ${name} | grep 'inet ' )
			menu="${menu} 'Device ${name} (${mac})' ''"
			menu="${menu} ' IP Address: ${ip}' ''"
			menu="${menu} ' Configure via dhcp' 'dhclient ${name}'"
			menu="${menu} ' Configure manually' 'rockate_configure ${name}'"
		done < <( ifconfig -a | grep HWaddr )	# we only want 'real' interfaces
		menu="${menu} '' ''"
		read dest gw msk fl met ref use dev < <( route -n | grep ^0.0.0.0 )
		menu="${menu} 'Default Route: ${gw} (via ${dev})' 'rockate_defaultroute ${gw}'"
		menu="${menu} '' ''"
		menu="${menu} 'Setup transparent Tor proxy (use after network setup)' 'rockate_transparent_tor'"
		menu="${menu} 'The following option can be used to update the ROCKate environment at' ''"
		menu="${menu} 'runtime if an update file has been provided. These changes will be' ''"
		menu="${menu} 'gone after reboot, so please use only if you really want to.' ''"
		menu="${menu} 'Update ROCKate' 'rockate_update'"
		eval gui_menu FOO "'ROCKate Configuration'" ${menu}
	do : ; done
}

