# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/rene/subversion/hotfix_r9293.patch
# ROCK Linux is Copyright (C) 1998 - 2004 Clifford Wolf
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

diff -pruN subversion-1.0.2_orig/subversion/libsvn_ra_svn/marshal.c subversion-1.0.2/subversion/libsvn_ra_svn/marshal.c
--- subversion-1.0.2_orig/subversion/libsvn_ra_svn/marshal.c	2004-05-13 11:03:26.000000000 +0200
+++ subversion-1.0.2/subversion/libsvn_ra_svn/marshal.c	2004-05-13 11:04:08.000000000 +0200
@@ -731,10 +731,6 @@ svn_error_t *svn_ra_svn_read_cmd_respons
                                     "Malformed error list");
           SVN_ERR(svn_ra_svn_parse_tuple(elt->u.list, pool, "nccn", &apr_err,
                                           &message, &file, &line));
-          /* The message field should have been optional, but we can't
-             easily change that, so "" means a nonexistent message. */
-          if (!*message)
-            message = NULL;
           err = svn_error_create(apr_err, err, message);
           err->file = apr_pstrdup(err->pool, file);
           err->line = line;
@@ -835,12 +831,10 @@ svn_error_t *svn_ra_svn_write_cmd_failur
   SVN_ERR(svn_ra_svn_start_list(conn, pool));
   for (; err; err = err->child)
     {
-      /* The message string should have been optional, but we can't
-         easily change that, so marshal nonexistent messages as "". */
       SVN_ERR(svn_ra_svn_write_tuple(conn, pool, "nccn",
                                      (apr_uint64_t) err->apr_err,
-                                     err->message ? err->message : "",
-                                     err->file, (apr_uint64_t) err->line));
+                                     err->message, err->file,
+                                     (apr_uint64_t) err->line));
     }
   SVN_ERR(svn_ra_svn_end_list(conn, pool));
   SVN_ERR(svn_ra_svn_end_list(conn, pool));
