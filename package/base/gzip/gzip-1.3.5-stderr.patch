# --- ROCK-COPYRIGHT-NOTE-BEGIN ---
# 
# This copyright note is auto-generated by ./scripts/Create-CopyPatch.
# Please add additional copyright information _after_ the line containing
# the ROCK-COPYRIGHT-NOTE-END tag. Otherwise it might get removed by
# the ./scripts/Create-CopyPatch script. Do not edit this copyright text!
# 
# ROCK Linux: rock-src/package/base/gzip/gzip-1.3.5-stderr.patch
# ROCK Linux is Copyright (C) 1998 - 2006 Clifford Wolf
# 
# This patch file is dual-licensed. It is available under the license the
# patched project is licensed under, as long as it is an OpenSource license
# as defined at http://www.opensource.org/ (e.g. BSD, X11) or under the terms
# of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
# 
# --- ROCK-COPYRIGHT-NOTE-END ---

--- gzip-1.3/gzexe.in.orig	Thu Nov  9 15:08:50 2000
+++ gzip-1.3/gzexe.in	Thu Nov  9 15:09:09 2000
@@ -15,9 +15,9 @@
 
 x=`basename $0`
 if test $# = 0; then
-  echo compress executables. original file foo is renamed to foo~
-  echo usage: ${x} [-d] files...
-  echo   "   -d  decompress the executables"
+  echo compress executables. original file foo is renamed to foo~ 1&>2
+  echo usage: ${x} [-d] files... 1>&2
+  echo   "   -d  decompress the executables" 1>&2
   exit 1
 fi
 
--- gzip-1.3/zdiff.in.orig	Thu Nov  9 15:08:50 2000
+++ gzip-1.3/zdiff.in	Thu Nov  9 15:09:29 2000
@@ -32,7 +32,7 @@
     esac
 done
 if test -z "$FILES"; then
-	echo "Usage: $prog [${comp}_options] file [file]"
+	echo "Usage: $prog [${comp}_options] file [file]" 1>&2
 	exit 2
 fi
 set $FILES
@@ -64,6 +64,6 @@
                 esac;;
 	esac
 else
-	echo "Usage: $prog [${comp}_options] file [file]"
+	echo "Usage: $prog [${comp}_options] file [file]" 1>&2
 	exit 2
 fi
--- gzip-1.3/zforce.in.orig	Thu Nov  9 15:08:50 2000
+++ gzip-1.3/zforce.in	Thu Nov  9 15:09:47 2000
@@ -9,8 +9,8 @@
 PATH="BINDIR:$PATH"; export PATH
 x=`basename $0`
 if test $# = 0; then
-  echo "force a '.gz' extension on all gzip files"
-  echo usage: $x files...
+  echo "force a '.gz' extension on all gzip files" 1>&2
+  echo usage: $x files... 1>&2
   exit 1
 fi
 
--- gzip-1.3/zgrep.in.orig	Thu Nov  9 15:08:50 2000
+++ gzip-1.3/zgrep.in	Thu Nov  9 15:12:21 2000
@@ -31,8 +31,8 @@
 done
 
 if test -z "$pat"; then
-  echo "grep through gzip files"
-  echo "usage: $prog [grep_options] pattern [files]"
+  echo "grep through gzip files" 1>&2
+  echo "usage: $prog [grep_options] pattern [files]" 1>&2
   exit 2
 fi
 
--- gzip-1.3/zmore.in.orig	Thu Nov  9 15:08:50 2000
+++ gzip-1.3/zmore.in	Thu Nov  9 15:13:49 2000
@@ -23,7 +23,8 @@
 
 if test $# = 0; then
     if test -t 0; then
-	echo usage: ${ZMORE_PROGRAM_NAME-zmore} files...
+	echo usage: ${ZMORE_PROGRAM_NAME-zmore} files... 1>&2
+	exit 1
     else
 	gzip -cdfq | eval ${PAGER-more}
     fi
--- gzip-1.3/znew.in.orig	Thu Nov  9 15:08:50 2000
+++ gzip-1.3/znew.in	Thu Nov  9 15:14:20 2000
@@ -51,13 +51,13 @@
 done
 
 if test $# -eq 0; then
-  echo "recompress .Z files into $ext (gzip) files"
-  echo usage: `echo $0 | sed 's,^.*/,,'` "[-tv9KP]" file.Z...
-  echo "  -t tests the new files before deleting originals"
-  echo "  -v be verbose"
-  echo "  -9 use the slowest compression method (optimal compression)"
-  echo "  -K keep a .Z file when it is smaller than the $ext file"
-  echo "  -P use pipes for the conversion $warn"
+  echo "recompress .Z files into $ext (gzip) files" 1>&2
+  echo usage: `echo $0 | sed 's,^.*/,,'` "[-tv9KP]" file.Z... 1>&2
+  echo "  -t tests the new files before deleting originals" 1>&2
+  echo "  -v be verbose" 1>&2
+  echo "  -9 use the slowest compression method (optimal compression)" 1>&2
+  echo "  -K keep a .Z file when it is smaller than the $ext file" 1>&2
+  echo "  -P use pipes for the conversion $warn" 1>&2
   exit 1
 fi
 
